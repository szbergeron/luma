struct S {
    var a: std::primitive::i64,

    fn foo() -> std::primitive::i64 { 5 },

    fn blah() -> std::primitive::i64 { 5 },

    /*fn boo(self: S) {
        //5 = other
        5
    }*/

    fn operator[_+_](self: S, other: S) -> S {
        struct S { a: self.foo() + other.foo() }
    },

    fn blah(self: S) -> std::primitive::i64 {
        5
    },
}

/*struct T<U> {
    var f: U,

    fn blah() -> std::primitive::i32 {
        struct T { f: 5 }.f
    }
}*/
