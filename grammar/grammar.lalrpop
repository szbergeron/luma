use std::str::FromStr;

grammar<'input>(input: &'input str);

extern {
    enum Tok<'input> {
        "id" => Tok::Identifier(<&'input str>),
        "(" => Tok::LParen,
        ")" => Tok::RParen,
        "mod" => Tok::Module,
        ":" => Tok::Colon,
    }
}

pub InnerParse: ParseUnit<'input> = {
    <declarations:StaticDeclaration*> =>
        ast::ParseUnit {
            declarations: Vec::from_iter(declarations.into_iter().flatten())
        },
};

StaticDeclaration: ast::SymbolDeclaration<'input> = {
    "mod" <id:Identifier> "{" <ip: InnerParse> "}" =>
        ast::SymbolDeclaration::NamespaceDeclaration(
            ast::Namespace {
                contents: ip,
                name: Some(id),
            }
        ),
};

Identifier: &'input str = {
    <s:r"[a-zA-Z][a-zA-Z0-9_]*"> => s,
};
